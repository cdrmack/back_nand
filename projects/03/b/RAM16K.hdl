// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1],
             a=loadRam01, b=loadRam02, c=loadRam03, d=loadRam04);

    RAM4K(in=in, load=loadRam01, address=address[2..13], out=ram01);
    RAM4K(in=in, load=loadRam02, address=address[2..13], out=ram02);
    RAM4K(in=in, load=loadRam03, address=address[2..13], out=ram03);
    RAM4K(in=in, load=loadRam04, address=address[2..13], out=ram04);

    Mux4Way16(a=ram01, b=ram02, c=ram03, d=ram04,
              sel=address[0..1], out=out);
}
